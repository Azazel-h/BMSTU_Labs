# Даны массивы D и F. Сформировать матрицу A по формуле ajk = sin(dj+fk)
# Определить среднее арифметическое положительных чисел каждой строки
# матрицы и количество элементов, меньших среднего арифметического.
# Результаты записать соответственно в массивы AV и L. Напечатать матрицу A в
# виде матрицы и рядом столбцы AV и L.
# Булгаков Арсений Сергеевич ИУ7-16Б

# Импортируем самописные функции проверки и создания матрицы по формуле
from Functions import *

# Вводим массив D и сразу проверяем
D = array_validation(input('Введите элементы массива D через пробел: ').split(), float)
while not D: # Пока проверка не проходит
    D = array_validation(input('Введите элементы массива D через пробел: ').split(), float) # Снова вводим массив D и сразу проверяем

# Вводим массив F и сразу проверяем
F = array_validation(input('Введите элементы массива F через пробел: ').split(), float)
while not F: # Пока проверка не проходит
    F = array_validation(input('Введите элементы массива F через пробел: ').split(), float) # Снова вводим массив F и сразу проверяем

# Создаем матрицу по формуле используя самописную функцию
arr = create_matrix(D, F)

# Создаем пустые AV и L
AV = []
L = []

# Идем по строкам в матрице
for i in arr:
    # Получаем положительные значения в строке
    positive = [k for k in i if k > 0]
    if len(positive) > 0: # Проверяем, что в строке были положительные числа
        avg = get_average(positive) # Считаем среднее арифмитическое используя самописную функцию
        AV.append(avg) # Добавляем среднее арифмитическое в AV

        counter = 0  # Заводим счетчик
        # Считаем количество элементов меньших среднего в строке
        for j in i:
            if j <= avg - 1e-5:
                counter += 1
        L.append(counter)  # Добавляем количество в L
    else:
        # Если положительных чисел не было в стркое, добовляем пустоту
        AV.append('')
        L.append('')

# Выводим матрицу + 2 колонки AV и L
print('MATRIX    ' + ' ' * 10 * (len(arr) - 1) + ' ' * 13 + 'AV' + ' ' * 6 + 'L')
for i, avg, l in zip(arr, AV, L):
    # Выводим строку
    for num in i:
        print(f'{num:>10.5f}', end=' ')
    # Выводим элементы соответствующие строке из AV и L
    print(f'{avg:>15.5f}{l:>4}' if avg else f'{avg:>10}{l:>4}')
