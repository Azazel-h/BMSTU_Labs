# Задана матрица D и массив I, содержащий номера строк, для которых
# необходимо определить максимальный элемент. Значения максимальных
# элементов запомнить в массиве R. Определить среднее арифметическое
# вычисленных максимальных значений. Напечатать матрицу D, массивы I и R,
# среднее арифметическое значение.
# Булгаков Арсений Сергеевич ИУ7-16Б

# Импортируем самописные функции проверки и создания матрицы по формуле
from Functions import *

def check(I):
    for i in I:
        if i >= len(D) or i < 0:
            print('Ошибка! - Введеный массив индексов некоректен для данной матрицы')
            return False
    return I

print('Введите матрицу D')
D = matrix_init() # Вводим матрицу используя самописную функцию
# Вводим массив I и сразу проверяем
I = array_validation(input('Введите элементы массива I через пробел (Индексация начинается с 0): ').split(), int)
while not I: # Пока проверка не проходит
    I = array_validation(input('Введите элементы массива I через пробел (Индексация начинается с 0): ').split(), int) # Снова вводим массив D и сразу проверяем
R = [] # Создаем пустой массив R

while str(check(I))[0] == 'F':
    I = array_validation(input('Введите элементы массива I через пробел (Индексация начинается с 0): ').split(), int)

# Добавляем максимальные значения строк в R из D по I
for i in I:
    R.append(max(D[i]))

# Выводим матрицу используя самописную функцию
print('Матрица D:')
print_matrix(D)
# Выводим массив
print('Массив I:', I)
if len(R) > 0: # Проверяем не пустой ли R
    print('Массив R:', R)
    avg = sum(R) / len(R) # Считаем среднее арифметическое
    print('Среднее арифметическое:',avg)
